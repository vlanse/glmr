// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mr/v1/mr.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMergeRequestsRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Filter        *GetMergeRequestsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsRequest) Reset() {
	*x = GetMergeRequestsRequest{}
	mi := &file_mr_v1_mr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsRequest) ProtoMessage() {}

func (x *GetMergeRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsRequest) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{0}
}

func (x *GetMergeRequestsRequest) GetFilter() *GetMergeRequestsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetMergeRequestsResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Groups        []*GetMergeRequestsResponse_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse) Reset() {
	*x = GetMergeRequestsResponse{}
	mi := &file_mr_v1_mr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse) ProtoMessage() {}

func (x *GetMergeRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1}
}

func (x *GetMergeRequestsResponse) GetGroups() []*GetMergeRequestsResponse_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetMergeRequestsRequest_Filter struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SkipApprovedByMe bool                   `protobuf:"varint,1,opt,name=skipApprovedByMe,proto3" json:"skipApprovedByMe,omitempty"`
	ShowOnlyMine     bool                   `protobuf:"varint,2,opt,name=showOnlyMine,proto3" json:"showOnlyMine,omitempty"`
	ButStillShowMine bool                   `protobuf:"varint,3,opt,name=butStillShowMine,proto3" json:"butStillShowMine,omitempty"` // when "skip approved by me" is enabled, this forces to include mine MRs in the list
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetMergeRequestsRequest_Filter) Reset() {
	*x = GetMergeRequestsRequest_Filter{}
	mi := &file_mr_v1_mr_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsRequest_Filter) ProtoMessage() {}

func (x *GetMergeRequestsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsRequest_Filter.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetMergeRequestsRequest_Filter) GetSkipApprovedByMe() bool {
	if x != nil {
		return x.SkipApprovedByMe
	}
	return false
}

func (x *GetMergeRequestsRequest_Filter) GetShowOnlyMine() bool {
	if x != nil {
		return x.ShowOnlyMine
	}
	return false
}

func (x *GetMergeRequestsRequest_Filter) GetButStillShowMine() bool {
	if x != nil {
		return x.ButStillShowMine
	}
	return false
}

type GetMergeRequestsResponse_MergeRequest struct {
	state          protoimpl.MessageState                          `protogen:"open.v1"`
	Project        *GetMergeRequestsResponse_MergeRequest_Project  `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Url            string                                          `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Description    string                                          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Author         *GetMergeRequestsResponse_MergeRequest_User     `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Status         *GetMergeRequestsResponse_MergeRequest_Status   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ApprovedBy     []*GetMergeRequestsResponse_MergeRequest_User   `protobuf:"bytes,6,rep,name=approvedBy,proto3" json:"approvedBy,omitempty"`
	Comments       *GetMergeRequestsResponse_MergeRequest_Comments `protobuf:"bytes,7,opt,name=comments,proto3" json:"comments,omitempty"`
	Age            string                                          `protobuf:"bytes,8,opt,name=age,proto3" json:"age,omitempty"`
	ApprovedBefore bool                                            `protobuf:"varint,9,opt,name=approvedBefore,proto3" json:"approvedBefore,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_MergeRequest) Reset() {
	*x = GetMergeRequestsResponse_MergeRequest{}
	mi := &file_mr_v1_mr_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_MergeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_MergeRequest) ProtoMessage() {}

func (x *GetMergeRequestsResponse_MergeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_MergeRequest.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_MergeRequest) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetMergeRequestsResponse_MergeRequest) GetProject() *GetMergeRequestsResponse_MergeRequest_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *GetMergeRequestsResponse_MergeRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetMergeRequestsResponse_MergeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetMergeRequestsResponse_MergeRequest) GetAuthor() *GetMergeRequestsResponse_MergeRequest_User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *GetMergeRequestsResponse_MergeRequest) GetStatus() *GetMergeRequestsResponse_MergeRequest_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetMergeRequestsResponse_MergeRequest) GetApprovedBy() []*GetMergeRequestsResponse_MergeRequest_User {
	if x != nil {
		return x.ApprovedBy
	}
	return nil
}

func (x *GetMergeRequestsResponse_MergeRequest) GetComments() *GetMergeRequestsResponse_MergeRequest_Comments {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetMergeRequestsResponse_MergeRequest) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *GetMergeRequestsResponse_MergeRequest) GetApprovedBefore() bool {
	if x != nil {
		return x.ApprovedBefore
	}
	return false
}

type GetMergeRequestsResponse_Group struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Name          string                                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MergeRequests []*GetMergeRequestsResponse_MergeRequest `protobuf:"bytes,2,rep,name=mergeRequests,proto3" json:"mergeRequests,omitempty"`
	Summary       *GetMergeRequestsResponse_Group_Summary  `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_Group) Reset() {
	*x = GetMergeRequestsResponse_Group{}
	mi := &file_mr_v1_mr_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_Group) ProtoMessage() {}

func (x *GetMergeRequestsResponse_Group) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_Group.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_Group) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetMergeRequestsResponse_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMergeRequestsResponse_Group) GetMergeRequests() []*GetMergeRequestsResponse_MergeRequest {
	if x != nil {
		return x.MergeRequests
	}
	return nil
}

func (x *GetMergeRequestsResponse_Group) GetSummary() *GetMergeRequestsResponse_Group_Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type GetMergeRequestsResponse_MergeRequest_User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,2,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Trusted       bool                   `protobuf:"varint,3,opt,name=trusted,proto3" json:"trusted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_MergeRequest_User) Reset() {
	*x = GetMergeRequestsResponse_MergeRequest_User{}
	mi := &file_mr_v1_mr_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_MergeRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_MergeRequest_User) ProtoMessage() {}

func (x *GetMergeRequestsResponse_MergeRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_MergeRequest_User.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_MergeRequest_User) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *GetMergeRequestsResponse_MergeRequest_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetMergeRequestsResponse_MergeRequest_User) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetMergeRequestsResponse_MergeRequest_User) GetTrusted() bool {
	if x != nil {
		return x.Trusted
	}
	return false
}

type GetMergeRequestsResponse_MergeRequest_Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_MergeRequest_Project) Reset() {
	*x = GetMergeRequestsResponse_MergeRequest_Project{}
	mi := &file_mr_v1_mr_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_MergeRequest_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_MergeRequest_Project) ProtoMessage() {}

func (x *GetMergeRequestsResponse_MergeRequest_Project) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_MergeRequest_Project.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_MergeRequest_Project) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *GetMergeRequestsResponse_MergeRequest_Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMergeRequestsResponse_MergeRequest_Status struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Conflict       bool                   `protobuf:"varint,1,opt,name=conflict,proto3" json:"conflict,omitempty"`
	PipelineFailed bool                   `protobuf:"varint,2,opt,name=pipelineFailed,proto3" json:"pipelineFailed,omitempty"`
	Ready          bool                   `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
	Outdated       bool                   `protobuf:"varint,4,opt,name=outdated,proto3" json:"outdated,omitempty"`
	Pending        bool                   `protobuf:"varint,5,opt,name=pending,proto3" json:"pending,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) Reset() {
	*x = GetMergeRequestsResponse_MergeRequest_Status{}
	mi := &file_mr_v1_mr_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_MergeRequest_Status) ProtoMessage() {}

func (x *GetMergeRequestsResponse_MergeRequest_Status) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_MergeRequest_Status.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_MergeRequest_Status) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) GetConflict() bool {
	if x != nil {
		return x.Conflict
	}
	return false
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) GetPipelineFailed() bool {
	if x != nil {
		return x.PipelineFailed
	}
	return false
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) GetOutdated() bool {
	if x != nil {
		return x.Outdated
	}
	return false
}

func (x *GetMergeRequestsResponse_MergeRequest_Status) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

type GetMergeRequestsResponse_MergeRequest_Comments struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UnresolvedCount int32                  `protobuf:"varint,1,opt,name=unresolvedCount,proto3" json:"unresolvedCount,omitempty"`
	ResolvedCount   int32                  `protobuf:"varint,2,opt,name=resolvedCount,proto3" json:"resolvedCount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_MergeRequest_Comments) Reset() {
	*x = GetMergeRequestsResponse_MergeRequest_Comments{}
	mi := &file_mr_v1_mr_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_MergeRequest_Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_MergeRequest_Comments) ProtoMessage() {}

func (x *GetMergeRequestsResponse_MergeRequest_Comments) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_MergeRequest_Comments.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_MergeRequest_Comments) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 0, 3}
}

func (x *GetMergeRequestsResponse_MergeRequest_Comments) GetUnresolvedCount() int32 {
	if x != nil {
		return x.UnresolvedCount
	}
	return 0
}

func (x *GetMergeRequestsResponse_MergeRequest_Comments) GetResolvedCount() int32 {
	if x != nil {
		return x.ResolvedCount
	}
	return 0
}

type GetMergeRequestsResponse_Group_Summary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Overdue       int32                  `protobuf:"varint,2,opt,name=overdue,proto3" json:"overdue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMergeRequestsResponse_Group_Summary) Reset() {
	*x = GetMergeRequestsResponse_Group_Summary{}
	mi := &file_mr_v1_mr_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMergeRequestsResponse_Group_Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeRequestsResponse_Group_Summary) ProtoMessage() {}

func (x *GetMergeRequestsResponse_Group_Summary) ProtoReflect() protoreflect.Message {
	mi := &file_mr_v1_mr_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeRequestsResponse_Group_Summary.ProtoReflect.Descriptor instead.
func (*GetMergeRequestsResponse_Group_Summary) Descriptor() ([]byte, []int) {
	return file_mr_v1_mr_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *GetMergeRequestsResponse_Group_Summary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMergeRequestsResponse_Group_Summary) GetOverdue() int32 {
	if x != nil {
		return x.Overdue
	}
	return 0
}

var File_mr_v1_mr_proto protoreflect.FileDescriptor

const file_mr_v1_mr_proto_rawDesc = "" +
	"\n" +
	"\x0emr/v1/mr.proto\x12\x05mr.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdf\x01\n" +
	"\x17GetMergeRequestsRequest\x12=\n" +
	"\x06filter\x18\x01 \x01(\v2%.mr.v1.GetMergeRequestsRequest.FilterR\x06filter\x1a\x84\x01\n" +
	"\x06Filter\x12*\n" +
	"\x10skipApprovedByMe\x18\x01 \x01(\bR\x10skipApprovedByMe\x12\"\n" +
	"\fshowOnlyMine\x18\x02 \x01(\bR\fshowOnlyMine\x12*\n" +
	"\x10butStillShowMine\x18\x03 \x01(\bR\x10butStillShowMine\"\xce\t\n" +
	"\x18GetMergeRequestsResponse\x12=\n" +
	"\x06groups\x18\x01 \x03(\v2%.mr.v1.GetMergeRequestsResponse.GroupR\x06groups\x1a\xfc\x06\n" +
	"\fMergeRequest\x12N\n" +
	"\aproject\x18\x01 \x01(\v24.mr.v1.GetMergeRequestsResponse.MergeRequest.ProjectR\aproject\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12I\n" +
	"\x06author\x18\x04 \x01(\v21.mr.v1.GetMergeRequestsResponse.MergeRequest.UserR\x06author\x12K\n" +
	"\x06status\x18\x05 \x01(\v23.mr.v1.GetMergeRequestsResponse.MergeRequest.StatusR\x06status\x12Q\n" +
	"\n" +
	"approvedBy\x18\x06 \x03(\v21.mr.v1.GetMergeRequestsResponse.MergeRequest.UserR\n" +
	"approvedBy\x12Q\n" +
	"\bcomments\x18\a \x01(\v25.mr.v1.GetMergeRequestsResponse.MergeRequest.CommentsR\bcomments\x12\x10\n" +
	"\x03age\x18\b \x01(\tR\x03age\x12&\n" +
	"\x0eapprovedBefore\x18\t \x01(\bR\x0eapprovedBefore\x1aZ\n" +
	"\x04User\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1c\n" +
	"\tavatarUrl\x18\x02 \x01(\tR\tavatarUrl\x12\x18\n" +
	"\atrusted\x18\x03 \x01(\bR\atrusted\x1a\x1d\n" +
	"\aProject\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1a\x98\x01\n" +
	"\x06Status\x12\x1a\n" +
	"\bconflict\x18\x01 \x01(\bR\bconflict\x12&\n" +
	"\x0epipelineFailed\x18\x02 \x01(\bR\x0epipelineFailed\x12\x14\n" +
	"\x05ready\x18\x03 \x01(\bR\x05ready\x12\x1a\n" +
	"\boutdated\x18\x04 \x01(\bR\boutdated\x12\x18\n" +
	"\apending\x18\x05 \x01(\bR\apending\x1aZ\n" +
	"\bComments\x12(\n" +
	"\x0funresolvedCount\x18\x01 \x01(\x05R\x0funresolvedCount\x12$\n" +
	"\rresolvedCount\x18\x02 \x01(\x05R\rresolvedCount\x1a\xf3\x01\n" +
	"\x05Group\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12R\n" +
	"\rmergeRequests\x18\x02 \x03(\v2,.mr.v1.GetMergeRequestsResponse.MergeRequestR\rmergeRequests\x12G\n" +
	"\asummary\x18\x03 \x01(\v2-.mr.v1.GetMergeRequestsResponse.Group.SummaryR\asummary\x1a9\n" +
	"\aSummary\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x18\n" +
	"\aoverdue\x18\x02 \x01(\x05R\aoverdue2\x88\x01\n" +
	"\rMergeRequests\x12w\n" +
	"\x10GetMergeRequests\x12\x1e.mr.v1.GetMergeRequestsRequest\x1a\x1f.mr.v1.GetMergeRequestsResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/mr/v1/GetMergeRequestsB$Z\"github.com/vlanse/glmr/proto/mr/v1b\x06proto3"

var (
	file_mr_v1_mr_proto_rawDescOnce sync.Once
	file_mr_v1_mr_proto_rawDescData []byte
)

func file_mr_v1_mr_proto_rawDescGZIP() []byte {
	file_mr_v1_mr_proto_rawDescOnce.Do(func() {
		file_mr_v1_mr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mr_v1_mr_proto_rawDesc), len(file_mr_v1_mr_proto_rawDesc)))
	})
	return file_mr_v1_mr_proto_rawDescData
}

var file_mr_v1_mr_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_mr_v1_mr_proto_goTypes = []any{
	(*GetMergeRequestsRequest)(nil),                        // 0: mr.v1.GetMergeRequestsRequest
	(*GetMergeRequestsResponse)(nil),                       // 1: mr.v1.GetMergeRequestsResponse
	(*GetMergeRequestsRequest_Filter)(nil),                 // 2: mr.v1.GetMergeRequestsRequest.Filter
	(*GetMergeRequestsResponse_MergeRequest)(nil),          // 3: mr.v1.GetMergeRequestsResponse.MergeRequest
	(*GetMergeRequestsResponse_Group)(nil),                 // 4: mr.v1.GetMergeRequestsResponse.Group
	(*GetMergeRequestsResponse_MergeRequest_User)(nil),     // 5: mr.v1.GetMergeRequestsResponse.MergeRequest.User
	(*GetMergeRequestsResponse_MergeRequest_Project)(nil),  // 6: mr.v1.GetMergeRequestsResponse.MergeRequest.Project
	(*GetMergeRequestsResponse_MergeRequest_Status)(nil),   // 7: mr.v1.GetMergeRequestsResponse.MergeRequest.Status
	(*GetMergeRequestsResponse_MergeRequest_Comments)(nil), // 8: mr.v1.GetMergeRequestsResponse.MergeRequest.Comments
	(*GetMergeRequestsResponse_Group_Summary)(nil),         // 9: mr.v1.GetMergeRequestsResponse.Group.Summary
}
var file_mr_v1_mr_proto_depIdxs = []int32{
	2,  // 0: mr.v1.GetMergeRequestsRequest.filter:type_name -> mr.v1.GetMergeRequestsRequest.Filter
	4,  // 1: mr.v1.GetMergeRequestsResponse.groups:type_name -> mr.v1.GetMergeRequestsResponse.Group
	6,  // 2: mr.v1.GetMergeRequestsResponse.MergeRequest.project:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest.Project
	5,  // 3: mr.v1.GetMergeRequestsResponse.MergeRequest.author:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest.User
	7,  // 4: mr.v1.GetMergeRequestsResponse.MergeRequest.status:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest.Status
	5,  // 5: mr.v1.GetMergeRequestsResponse.MergeRequest.approvedBy:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest.User
	8,  // 6: mr.v1.GetMergeRequestsResponse.MergeRequest.comments:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest.Comments
	3,  // 7: mr.v1.GetMergeRequestsResponse.Group.mergeRequests:type_name -> mr.v1.GetMergeRequestsResponse.MergeRequest
	9,  // 8: mr.v1.GetMergeRequestsResponse.Group.summary:type_name -> mr.v1.GetMergeRequestsResponse.Group.Summary
	0,  // 9: mr.v1.MergeRequests.GetMergeRequests:input_type -> mr.v1.GetMergeRequestsRequest
	1,  // 10: mr.v1.MergeRequests.GetMergeRequests:output_type -> mr.v1.GetMergeRequestsResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_mr_v1_mr_proto_init() }
func file_mr_v1_mr_proto_init() {
	if File_mr_v1_mr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mr_v1_mr_proto_rawDesc), len(file_mr_v1_mr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mr_v1_mr_proto_goTypes,
		DependencyIndexes: file_mr_v1_mr_proto_depIdxs,
		MessageInfos:      file_mr_v1_mr_proto_msgTypes,
	}.Build()
	File_mr_v1_mr_proto = out.File
	file_mr_v1_mr_proto_goTypes = nil
	file_mr_v1_mr_proto_depIdxs = nil
}
