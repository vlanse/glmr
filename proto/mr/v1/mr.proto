syntax = "proto3";
package mr.v1;
option go_package = "github.com/vlanse/glmr/proto/mr/v1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service MergeRequests {
  rpc GetMergeRequests(GetMergeRequestsRequest) returns (GetMergeRequestsResponse) {
    option (google.api.http) = {
      post: "/mr/v1/GetMergeRequests"
      body: "*"
    };
  }
}

message GetMergeRequestsRequest {
  message Filter {
    bool skipApprovedByMe = 1;
    bool showOnlyMine = 2;
    bool butStillShowMine = 3; // when "skip approved by me" is enabled, this forces to include mine MRs in the list
  }
  Filter filter = 1;
}

message GetMergeRequestsResponse {
  message MergeRequest {
    message User {
      string username = 1;
      string avatarUrl = 2;
      bool trusted = 3;
    }

    message Project {
      string name = 2;
    }

    message Status {
      bool conflict = 1;
      bool pipelineFailed = 2;
      bool ready = 3;
      bool outdated = 4;
      bool pending = 5;
    }

    message Comments {
      int32 unresolvedCount = 1;
      int32 resolvedCount = 2;
    }

    Project project = 1;
    string url = 2;
    string description = 3;
    User author = 4;
    Status status = 5;
    repeated User approvedBy = 6;
    Comments comments = 7;
    string age = 8;
    bool approvedBefore = 9;
  }

  message Group {
    string name = 1;
    repeated MergeRequest mergeRequests = 2;
  }

  repeated Group groups = 1;
}
